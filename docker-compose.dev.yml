version: '3'

services:
  nodejs:
    container_name: nodejs
    build:
      context: .
      dockerfile: dockerfile.dev
    image: nodejs
    restart: unless-stopped
    environment:
      ATTACHED_VOLUME_ROOT: /usr/src/attached-volume/old/
    networks:
      - app-network
    volumes:
      - .:/usr/src/app
      - node-file-data4:/usr/src/attached-volume
      # - ./../docker_tmp_volume:/usr/src/attached-volume
      # - /usr/src/app/node_modules
      # expose docker so we can run build commands in "builder" container 
      - /var/run/docker.sock:/var/run/docker.sock

  sshd:
    build:
      context: .
      dockerfile: dockerfile.sshd
      args: 
        AUTHORIZED_KEYS: ${AUTHORIZED_KEYS}
    container_name: sshd
    networks:
      - app-network
    ports:
      - "2222:22"
    volumes:
      - node-file-data4:/usr/src/attached-volume


  # builder:
  #   container_name: builder
  #   build:
  #     context: .
  #     dockerfile: nodebuilder.dockerfile
  #   volumes:
  #    - node-file-data4:/usr/src/attached-volume

  # # dynamic builder 
  # dbuilder:
  #   container_name: $DBUILDER_NAME
  #   build:
  #     context: $DBUILDER_CONTEXT
  #     dockerfile: $DBUILDER_DOCKERFILE
  #     #$DBUILDER_CONTEXT
  #     #$DBUILDER_DOCKERFILE
  #     #args: 
  #     #  DBUILDER_WORKDIR: $DBUILDER_WORKDIR
  #   volumes:
  #     - node-file-data4:/usr/src/attached-volume

  webserver:
    container_name: webserver
    image: nginx:mainline-alpine
    restart: unless-stopped
    ports:
      - "7132:80"
      - "7133:443"
    volumes:
      - web-root:/var/www/html
      - ./docker-config/nginx-conf:/etc/nginx/conf.d
      - ./docker-config/nginx-certs:/etc/nginx/conf.d/certs
    networks:
      - app-network

  mydb:
    container_name: mydb
    image: postgres
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: seconddb
    networks:
      - app-network
    volumes:
      - db-data:/var/lib/postgresql/data
    expose: # internal links
      - 5432
    # ports:
    #   - 5432:5432

  cachedb:
    image: redis
    container_name: cachedb
    expose:
      - 6379
    networks:
      - app-network
    volumes:
     - redisdata:/data

  pgadmin:
    container_name: pgadmin_container
    restart: unless-stopped
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
    volumes:
       - pgadmin:/root/.pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - app-network

  ipfs:
    container_name: ipfs
    image: ipfs/go-ipfs
    restart: unless-stopped
    expose: # internal links
      - 4001
      - 5001
      - 8080
    # externally available ports
    # - 5010: api endpoint 
    ports: 
      - 4001:4001
      # - 5010:5001
      # - 8081:8080 
    volumes:
      - ipfs-data:/data
    networks:
      - app-network

volumes:
  db-data:
    driver: local
  # node-file-data42:
  #   driver: local
  #   driver_opts:
  #     type: none
  #     o: bind
  #     device: /usr/src/attached-volume
  node-file-data4:
    driver: local
  web-root:
    driver: local
  ipfs-data:
    driver: local
  redisdata:
    driver: local
  pgadmin:

networks:
  app-network:
    driver: bridge 
  default:
    driver: bridge 